{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAKpC,IAAIC,EAAa,KACbC,EAAY,KACZC,EAAc,KAElB,MAAMC,EAAgB,CAACC,EAAUC,IACzB,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACYC,KAAKC,SAAW,GAErCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE1BA,EAAM,IA8BXR,EAAKe,iBAAiB,UA1BNC,IACfA,EAAEC,iBACGD,EAAEE,OAAOC,QAEd,MACCC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACtBP,EAAEQ,cAENrB,EAAasB,OAAOJ,EAAMK,OAC1BtB,EAAYqB,OAAOH,EAAKI,OACxBrB,EAAcoB,OAAOF,EAAOG,OAE5B,IAAK,IAAIC,EAAI,EAAGA,GAAKtB,EAAasB,IACjCrB,EAAcqB,EAAGxB,GACfyB,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA+B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAE/DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MACnBV,EAAA+B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,IAE9DL,GAAcC,EAGfY,EAAEQ,cAAcS,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector(\".form\");\n// const amount = document.querySelector(\"[amount]\");\n// const delay = document.querySelector(\"[delay]\");\n// const step = document.querySelector(\"[step]\");\n\nlet delayInput = null;\nlet stepInput = null;\nlet amountInput = null;\n\nconst createPromise = (position, delay) => {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tconst shouldResolve = Math.random() > 0.3;\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve({ position, delay });\n\t\t\t} else {\n\t\t\t\treject({ position, delay });\n\t\t\t}\n\t\t}, delay);\n\t});\n};\n\nconst submit = (e) => {\n\te.preventDefault();\n\tif (!e.target.tagName === \"BUTTON\") return;\n\n\tconst {\n\t\telements: { delay, step, amount },\n\t} = e.currentTarget;\n\n\tdelayInput = Number(delay.value);\n\tstepInput = Number(step.value);\n\tamountInput = Number(amount.value);\n\n\tfor (let i = 1; i <= amountInput; i++) {\n\t\tcreatePromise(i, delayInput)\n\t\t\t.then(({ position, delay }) => {\n\t\t\t\tNotify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t})\n\t\t\t.catch(({ position, delay }) => {\n\t\t\t\tNotify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\t});\n\t\tdelayInput += stepInput;\n\t}\n\n\te.currentTarget.reset();\n};\n\nform.addEventListener(\"submit\", submit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","target","tagName","elements","delay1","step","amount","currentTarget","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.bbc86b01.js.map"}